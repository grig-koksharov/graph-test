{"version":3,"sources":["config/graphProblems/graphProblems.js","config/graphProblems/dfs.js","config/graphProblems/bfs.js","config/firebase.js","components/header/Header.js","components/signup/SignUp.js","components/login/Login.js","firebase/firebase.js","firebase/AttemptDataService.js","components/theory/Theory.js","components/test/Test.js","components/problemsList/ProblemsList.js","App.js","reportWebVitals.js","index.js"],"names":["graphProblems","name","theory","text","graphAnimationExample","graph","nodes","id","edges","from","to","animationPath","graphQuestion","correctPaths","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","Header","isSignedIn","user","providerId","className","onClick","firebase","auth","signOut","SignUp","props","state","email","password","event","this","setState","currentTarget","value","preventDefault","length","createUserWithEmailAndPassword","catch","error","code","errorMessage","message","toast","onSubmit","e","signUp","htmlFor","type","style","border","fontSize","borderBottom","placeholder","onChange","handleEmailChange","required","handlePasswordChange","background","googleAuthProvider","GoogleAuthProvider","signInWithPopup","Component","Login","signInWithEmailAndPassword","login","initializeApp","db","database","ref","attempt","push","key","child","update","remove","Theory","timer","ms","Promise","res","setTimeout","problemConfig","find","config","match","params","network","a","edgeId","selectEdges","runGraphAnimationExample","options","graphOptions","getNetwork","layout","hierarchical","color","physics","interaction","dragNodes","dragView","zoomView","height","Test","currentPath","possibleCorrectPaths","alreadyFailed","alreadyPassed","result","data","userId","currentUser","uid","userEmail","problem","date","Date","toGMTString","AttemptDataService","create","console","log","events","selectEdge","info","selectedEdge","i","filter","possibleCorrectPath","submitAttempt","some","success","ProblemsList","map","App","exact","path","component","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a74904d5.chunk.js","sourcesContent":["import { dfs } from './dfs'\nimport { bfs } from './bfs'\n\nexport const graphProblems = [\n    dfs,\n    bfs\n];","export const dfs = {\n    name: \"DFS\",\n    theory: {\n        text: \"Depth-first search (DFS) is an algorithm for traversing or searching tree or graph data structures. The algorithm starts at the root node (selecting some arbitrary node as the root node in the case of a graph) and explores as far as possible along each branch before backtracking.\",\n        graphAnimationExample: {\n            graph: {\n                nodes: [\n                  { id: 1 },\n                  { id: 2 },\n                  { id: 3 },\n                  { id: 4 },\n                  { id: 5 }\n                ],\n                edges: [\n                  { id: 12, from: 1, to: 2 },\n                  { id: 13, from: 1, to: 3 },\n                  { id: 24, from: 2, to: 4 },\n                  { id: 25, from: 2, to: 5 }\n                ]\n            },\n            animationPath: [12, 13, 24, 25]\n        },\n    },\n    graphQuestion: {\n        graph: {\n            nodes: [\n              { id: 1 },\n              { id: 2 },\n              { id: 3 },\n              { id: 4 },\n              { id: 5 }\n            ],\n            edges: [\n              { id: 12, from: 1, to: 2 },\n              { id: 13, from: 1, to: 3 },\n              { id: 24, from: 2, to: 4 },\n              { id: 25, from: 2, to: 5 }\n            ]\n        },\n        correctPaths: [\n            [12, 13],\n            [13, 12]\n        ]\n    }\n}\n","export const bfs = {\n    name: \"BFS\",\n    theory: {\n        text: \"Breadth-first search (BFS) is an algorithm for searching a tree data structure for a node that satisfies a given property. It starts at the tree root and explores all nodes at the present depth prior to moving on to the nodes at the next depth level. Extra memory, usually a queue, is needed to keep track of the child nodes that were encountered but not yet explored.\",\n        graphAnimationExample: {\n            graph: {\n                nodes: [\n                  { id: 1 },\n                  { id: 2 },\n                  { id: 3 },\n                  { id: 4 },\n                  { id: 5 }\n                ],\n                edges: [\n                  { id: 12, from: 1, to: 2 },\n                  { id: 13, from: 1, to: 3 },\n                  { id: 24, from: 2, to: 4 },\n                  { id: 25, from: 2, to: 5 }\n                ]\n            },\n            animationPath: [12, 13, 24, 25]\n        },\n    },\n    graphQuestion: {\n        graph: {\n            nodes: [\n              { id: 1 },\n              { id: 2 },\n              { id: 3 },\n              { id: 4 },\n              { id: 5 }\n            ],\n            edges: [\n              { id: 12, from: 1, to: 2 },\n              { id: 13, from: 1, to: 3 },\n              { id: 24, from: 2, to: 4 },\n              { id: 25, from: 2, to: 5 }\n            ]\n        },\n        correctPaths: [\n            [12, 13],\n            [13, 12]\n        ]\n    }\n}","export const firebaseConfig = {\n  apiKey: \"AIzaSyB2dYx7HNSKYcP0hDl_jZQ9Go5ILf82OlI\",\n  authDomain: \"graph-test-3a70f.firebaseapp.com\",\n  projectId: \"graph-test-3a70f\",\n  storageBucket: \"graph-test-3a70f.appspot.com\",\n  messagingSenderId: \"494812105664\",\n  appId: \"1:494812105664:web:de696c32d0647dd17f5625\",\n  measurementId: \"G-D9C1M3M7XY\",\n  databaseURL: \"https://graph-test-3a70f-default-rtdb.firebaseio.com/\"\n};","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route, Link, BrowserRouter, Redirect } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport firebase from 'firebase/app'\nimport \"firebase/auth\";\nimport {\n  FirebaseAuthProvider,\n  FirebaseAuthConsumer,\n  IfFirebaseAuthed,\n  IfFirebaseAuthedAnd\n} from \"@react-firebase/auth\";\n\nexport const Header = () => {\n  return (\n        <FirebaseAuthConsumer>\n          {({ isSignedIn, user, providerId }) => {\n            return (\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark px-5\">\n                  <a className=\"navbar-brand\">\n                    Graph Problem Solving\n                  </a>\n                  <div className=\"navbar-nav mr-auto\">\n                    {!isSignedIn && <>\n                    <li className=\"nav-item\">\n                      <Link to=\"/login\" className=\"nav-link\">\n                        Login\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link to=\"/sign-up\" className=\"nav-link\">\n                        Sign Up\n                      </Link>\n                    </li>\n                    </>}\n                    {isSignedIn && <>\n                    <li className=\"nav-item\">\n                      <Link to=\"/problems\" className=\"nav-link\">\n                        Problems List\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link onClick={() => firebase.auth().signOut() } className=\"nav-link\">\n                        Sign Out\n                      </Link>\n                    </li>\n                    </>}\n                  </div>\n                </nav>\n            );\n          }}\n        </FirebaseAuthConsumer>\n  );\n};\n\nexport default Header;\n","import {Link, Redirect} from 'react-router-dom';\nimport React, {Component} from 'react';\nimport firebase from 'firebase/app'\nimport \"firebase/auth\";\nimport {\n  FirebaseAuthProvider,\n  FirebaseAuthConsumer,\n  IfFirebaseAuthed,\n  IfFirebaseAuthedAnd\n} from \"@react-firebase/auth\";\nimport { toast } from 'react-toastify';\n\nclass SignUp extends Component {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  handleEmailChange(event: SyntheticEvent<HTMLInputElement>) {\n    this.setState({email: event.currentTarget.value});\n  }\n\n  handlePasswordChange(event: SyntheticEvent<HTMLInputElement>) {\n    this.setState({password: event.currentTarget.value});\n  }\n\n  signUp(event: SyntheticEvent<HTMLInputElement>) {\n    event.preventDefault();\n    if (this.state.email.length >= 5 && this.state.password.length >= 5) {\n      firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .catch((error) => {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            toast.error(errorMessage)\n          });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"text-center container h-100 flex-grow\">\n        <div className=\"row align-items-center h-100 flex-grow\">\n          <div className=\"col-lg-4 col-md-6 col-sm-8 col-xs-10 mx-auto\">\n            <form className=\"d-flex flex-column align-items-center form-signin\" onSubmit={(e) => {\n              this.signUp(e)\n            }}>\n              <h1 className=\"pt-5 mt-5 pb-3\">Sign up please</h1>\n\n              <label className=\"sr-only\" htmlFor=\"inputEmail\">Email address</label>\n              <input\n                type=\"email\"\n                id=\"inputEmail\"\n                className=\"form-control mb-3 mt-3 pl-4\"\n                style={{border: \"none\", fontSize: \"14px\", borderBottom: \"1px solid #eee\"}}\n                placeholder=\"Email\"\n                onChange={(e) => {\n                  this.handleEmailChange(e)\n                }}\n                required/>\n\n              <label className=\"sr-only\" htmlFor=\"inputPassword\">Password</label>\n              <input\n                type=\"password\"\n                id=\"inputPassword\"\n                className=\"form-control mb-4 pl-4\"\n                style={{border: \"none\", fontSize: \"14px\", borderBottom: \"1px solid #eee\"}}\n                placeholder=\"Password\"\n                onChange={(e) => {\n                  this.handlePasswordChange(e)\n                }}\n                required/>\n\n              <button className=\"btn btn-dark border-0 mt-3 mb-3 w-100 py-1\"\n                      style={{fontSize: \"18px\", background: '#37AAE9'}}\n                      type=\"submit\">\n                Sign Up\n              </button>\n\n                <button className=\"btn btn-dark border-0 mb-3 w-100 py-1\"\n                  onClick={() => {\n                    const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n                    firebase.auth().signInWithPopup(googleAuthProvider);\n                  }}\n                >\n                  Or Sign Up with Google\n                </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default SignUp;","import {Link, Redirect} from 'react-router-dom';\nimport React, {Component} from 'react';\nimport firebase from 'firebase/app'\nimport \"firebase/auth\";\nimport {\n  FirebaseAuthProvider,\n  FirebaseAuthConsumer,\n  IfFirebaseAuthed,\n  IfFirebaseAuthedAnd\n} from \"@react-firebase/auth\";\nimport { toast } from 'react-toastify';\n\nclass Login extends Component {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  handleEmailChange(event: SyntheticEvent<HTMLInputElement>) {\n    this.setState({email: event.currentTarget.value});\n  }\n\n  handlePasswordChange(event: SyntheticEvent<HTMLInputElement>) {\n    this.setState({password: event.currentTarget.value});\n  }\n\n  login(event: SyntheticEvent<HTMLInputElement>) {\n    event.preventDefault();\n    if (this.state.email.length >= 5 && this.state.password.length >= 5) {\n      firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n          toast.error(errorMessage)\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"text-center container h-100 flex-grow\">\n        <div className=\"row align-items-center h-100 flex-grow\">\n          <div className=\"col-lg-4 col-md-6 col-sm-8 col-xs-10 mx-auto\">\n            <form className=\"d-flex flex-column align-items-center form-signin\" onSubmit={(e) => {\n              this.login(e)\n            }}>\n              <h1 className=\"pt-5 mt-5 pb-3\">Sign in please</h1>\n\n              <label className=\"sr-only\" htmlFor=\"inputEmail\">Email address</label>\n              <input\n                type=\"email\"\n                id=\"inputEmail\"\n                className=\"form-control mb-3 mt-3 pl-4\"\n                style={{border: \"none\", fontSize: \"14px\", borderBottom: \"1px solid #eee\"}}\n                placeholder=\"Email\"\n                onChange={(e) => {\n                  this.handleEmailChange(e)\n                }}\n                required/>\n\n              <label className=\"sr-only\" htmlFor=\"inputPassword\">Password</label>\n              <input\n                type=\"password\"\n                id=\"inputPassword\"\n                className=\"form-control mb-4 pl-4\"\n                style={{border: \"none\", fontSize: \"14px\", borderBottom: \"1px solid #eee\"}}\n                placeholder=\"Password\"\n                onChange={(e) => {\n                  this.handlePasswordChange(e)\n                }}\n                required/>\n\n              <button className=\"btn btn-dark border-0 mt-3 mb-3 w-100 py-1\"\n                      style={{fontSize: \"18px\", background: '#37AAE9'}}\n                      type=\"submit\">\n                Sign In</button>\n\n                <button className=\"btn btn-dark border-0 mb-3 w-100 py-1\"\n                  onClick={() => {\n                    const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n                    firebase.auth().signInWithPopup(googleAuthProvider);\n                  }}\n                >\n                  Or Sign In with Google\n                </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Login;","import firebase from \"firebase\";\nimport \"firebase/database\";\nimport { firebaseConfig } from \"../config/firebase\"\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase.database();","import firebase from \"./firebase\";\n\nconst db = firebase.ref(\"/attempts\");\n\nclass AttemptDataService {\n  getAll() {\n    return db;\n  }\n\n  create(attempt) {\n    return db.push(attempt);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new AttemptDataService();","import React, { Component } from \"react\";\nimport Graph from \"react-graph-vis\";\nimport AttemptDataService from \"../../firebase/AttemptDataService\";\nimport { graphProblems } from '../../config/graphProblems/graphProblems'\nimport { Link } from 'react-router-dom'\n\nexport default class Theory extends Component {\n  constructor(props) {\n    super(props);\n    this.problemConfig = graphProblems.find(config => config.name == props.match.params.name)\n  }\n\n  async runGraphAnimationExample(network) {\n    for (const edgeId of this.problemConfig.theory.graphAnimationExample.animationPath) {\n        network.selectEdges([edgeId]);\n        await this.timer(1000);\n    }\n    await this.timer(2000);\n    this.runGraphAnimationExample(network)\n  }\n\n  timer = ms => new Promise(res => setTimeout(res, ms))\n\n  render() {\n    return (\n        <div>\n            <h2>{this.problemConfig.name} Theory</h2>\n            <div>{this.problemConfig.theory.text}</div>\n            <Link to={`/problems/${this.problemConfig.name}/test`} className=\"btn-dark btn mt-3\">\n              Start Test\n            </Link>\n            <Graph\n              options={graphOptions}\n              graph={this.problemConfig.theory.graphAnimationExample.graph}\n              getNetwork={(network) => {\n                this.runGraphAnimationExample(network);\n              }}\n            />\n        </div>\n    );\n  }\n}\n\nconst graphOptions = {\n  layout: {\n    hierarchical: true\n  },\n  edges: {\n    color: \"#000000\",\n    physics: false\n  },\n  interaction: {\n    dragNodes: false,\n    dragView: false,\n    zoomView: false\n  },\n  height: \"500px\"\n};","import React, { Component } from \"react\";\nimport Graph from \"react-graph-vis\";\nimport AttemptDataService from \"../../firebase/AttemptDataService\";\nimport { graphProblems } from '../../config/graphProblems/graphProblems'\nimport firebase from \"firebase\";\nimport { useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nimport { Link } from 'react-router-dom'\n\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.problemConfig = graphProblems.find(config => config.name == props.match.params.name)\n    this.state = {\n      currentPath: [],\n      possibleCorrectPaths: this.problemConfig.graphQuestion.correctPaths,\n      alreadyFailed: false,\n      alreadyPassed: false,\n    };\n  }\n\n  submitAttempt(result) {\n    let data = {\n      userId: firebase.auth().currentUser.uid,\n      userEmail: firebase.auth().currentUser.email,\n      problem: this.problemConfig.name,\n      result: result,\n      date: new Date().toGMTString()\n    };\n\n    AttemptDataService.create(data)\n      .catch((e) => {\n        console.log(e);\n        toast.error(\"Cannot submit your results to the server: \" + e.message);\n      });\n  }\n\n  render() {\n    return (\n        <div>\n            <h2>{this.problemConfig.name} Test</h2>\n            <div>Please choose a next edge that the algorithm must choose. Keep choosing edges until the algorithm is done.</div>\n            <Link to={`/problems/${this.problemConfig.name}/theory`} className=\"btn-dark btn mt-3\">\n              Back to Theory\n            </Link>\n            <Graph\n              options={graphOptions}\n              graph={this.problemConfig.graphQuestion.graph}\n              events={{\n                selectEdge: (event) => {\n                  if (this.state.alreadyFailed) {\n                    toast.info(\"The test is already failed.\")\n                    return;\n                  }\n                  if (this.state.alreadyPassed) {\n                    toast.info(\"The test is already passed.\")\n                    return;\n                  }\n                  if (event.nodes.length !== 0) {\n                    toast.info(\"A node is selected. Please select an edge instead.\")\n                    return;\n                  }\n                  if (event.edges.length > 1) {\n                    toast.error(\"Not expected that more than 1 node is selected.\")\n                    return;\n                  }\n                  const selectedEdge = event.edges[0];\n                  if (selectedEdge == this.state.currentPath[this.state.currentPath.length - 1]) {\n                    return;\n                  }\n                  this.setState({currentPath: [...this.state.currentPath, selectedEdge]});\n\n                  console.log(this.state);\n                  for (let i = 0; i < this.state.currentPath.length; i++) {\n\n                    this.setState({possibleCorrectPaths: this.state.possibleCorrectPaths\n                        .filter((possibleCorrectPath) => possibleCorrectPath[i] === this.state.currentPath[i])})\n                  }\n\n                  if (this.state.possibleCorrectPaths.length == 0) {\n                    toast.error(\"The test is failed.\")\n                    this.setState({alreadyFailed: true})\n                    this.submitAttempt(\"FAILURE\")\n                    return;\n                  }\n                  if (this.state.possibleCorrectPaths.some((possibleCorrectPath) => possibleCorrectPath.length === this.state.currentPath.length)) {\n                    toast.success(\"The test is passed.\")\n                    this.setState({alreadyPassed: true})\n                    this.submitAttempt(\"SUCCESS\")\n                    return;\n                  }\n                }\n              }}\n            />\n        </div>\n    );\n  }\n}\n\nconst graphOptions = {\n  layout: {\n    hierarchical: true\n  },\n  edges: {\n    color: \"#000000\",\n    physics: false\n  },\n  interaction: {\n    dragNodes: false,\n    dragView: false,\n    zoomView: false\n  },\n  height: \"500px\"\n};","import React, { Component } from \"react\";\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport { graphProblems } from '../../config/graphProblems/graphProblems'\n\nexport default class ProblemsList extends Component {\n\n  render() {\n    return (\n        <div className=\"container pt-5 justify-content-center w-50\">\n            <div className=\"row h5 text-center\">\n                This website is to assess and improve your graph problem solving skills.\n                <br/>\n                Please choose a graph problem to solve:\n            </div>\n            {graphProblems && graphProblems.map((problemConfig) =>\n                <div className=\"row pt-2\">\n                <Link to={`/problems/${problemConfig.name}/theory`} className=\"btn-dark btn\">\n                  {problemConfig.name}\n                </Link>\n                </div>\n            )}\n        </div>\n    );\n  }\n}","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route, Link, BrowserRouter, Redirect } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport firebase from 'firebase/app'\nimport \"firebase/auth\";\nimport {\n  FirebaseAuthProvider,\n  FirebaseAuthConsumer,\n  IfFirebaseAuthed,\n  IfFirebaseAuthedAnd\n} from \"@react-firebase/auth\";\nimport { graphProblems } from './config/graphProblems/graphProblems';\nimport { firebaseConfig } from './config/firebase';\n\nimport Header from \"./components/header/Header\";\nimport SignUp from \"./components/signup/SignUp\";\nimport Login from \"./components/login/Login\";\nimport Theory from \"./components/theory/Theory\";\nimport Test from \"./components/test/Test\";\nimport ProblemsList from \"./components/problemsList/ProblemsList\";\n\nexport const App = () => {\n  return (\n    <BrowserRouter>\n    <FirebaseAuthProvider {...firebaseConfig} firebase={firebase}>\n      <div>\n        <FirebaseAuthConsumer>\n          {({ isSignedIn, user, providerId }) => {\n            return (\n            <div>\n              <Header/>\n              <div>\n                <div className=\"container mt-3\">\n                  <Switch>\n                    {isSignedIn && <>\n                    <Route exact path=\"/problems\" component={ProblemsList} />\n                    <Route exact path=\"/problems/:name/theory\" component={Theory} />\n                    <Route exact path=\"/problems/:name/test\" component={Test} />\n                    <Redirect exact from=\"/\" to=\"/problems\" />\n                    <Redirect exact from=\"/login\" to=\"/problems\" />\n                    </>}\n                    {!isSignedIn && <>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/sign-up\" component={SignUp} />\n                    <Redirect exact from=\"/\" to=\"/login\" />\n                    <Redirect exact from=\"/problems\" to=\"/login\" />\n                    </>}\n                  </Switch>\n                </div>\n              </div>\n              <ToastContainer />\n            </div>\n            );\n          }}\n        </FirebaseAuthConsumer>\n      </div>\n    </FirebaseAuthProvider>\n    </BrowserRouter>\n  );\n};\nrender(<App />, document.getElementById(\"root\"));\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}